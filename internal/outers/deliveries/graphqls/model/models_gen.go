// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/99designs/gqlgen/graphql"
)

type Account struct {
	ID               string   `json:"id"`
	ImageURL         *string  `json:"imageUrl,omitempty"`
	Name             string   `json:"name"`
	Email            string   `json:"email"`
	Password         string   `json:"password"`
	TotalPostLike    float64  `json:"totalPostLike"`
	TotalChatMessage float64  `json:"totalChatMessage"`
	Scopes           []string `json:"scopes"`
}

func (Account) IsEntity() {}

type AccountInput struct {
	Image    *graphql.Upload `json:"image,omitempty"`
	Name     string          `json:"name"`
	Email    string          `json:"email"`
	Password string          `json:"password"`
	Scopes   []string        `json:"scopes,omitempty"`
}

type ChatMessage struct {
	ID        string   `json:"id"`
	AccountID string   `json:"accountId"`
	Account   *Account `json:"account"`
}

func (ChatMessage) IsEntity() {}

type ChatRoom struct {
	ID string `json:"id"`
}

func (ChatRoom) IsEntity() {}

type ChatRoomMember struct {
	ID        string   `json:"id"`
	AccountID string   `json:"accountId"`
	Account   *Account `json:"account"`
}

func (ChatRoomMember) IsEntity() {}

type Mutation struct {
}

type Post struct {
	ID        string   `json:"id"`
	AccountID string   `json:"accountId"`
	Account   *Account `json:"account"`
}

func (Post) IsEntity() {}

type PostLike struct {
	ID        string   `json:"id"`
	AccountID string   `json:"accountId"`
	Account   *Account `json:"account"`
}

func (PostLike) IsEntity() {}

type Query struct {
}

type Session struct {
	AccessToken  string `json:"accessToken"`
	RefreshToken string `json:"refreshToken"`
}
